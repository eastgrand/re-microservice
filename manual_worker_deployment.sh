#!/bin/bash
# Manual Worker Service Deployment Script
# This script provides instructions for manually creating a worker service on Render.com

# Terminal colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}=================================================${NC}"
echo -e "${BLUE}   Manual Worker Service Deployment for Render    ${NC}"
echo -e "${BLUE}=================================================${NC}"

echo -e "${YELLOW}The worker service isn't being created automatically from render.yaml.${NC}"
echo -e "${YELLOW}Follow these steps to manually create the worker service:${NC}"
echo -e ""
echo -e "1. ${YELLOW}Login to your Render dashboard${NC}"
echo -e "   Go to: https://dashboard.render.com/"
echo -e ""
echo -e "2. ${YELLOW}Click the 'New +' button${NC}"
echo -e ""
echo -e "3. ${YELLOW}Select 'Worker'${NC}"
echo -e ""
echo -e "4. ${YELLOW}Connect your repository${NC}"
echo -e "   - Select the repository containing your SHAP microservice"
echo -e "   - Select the branch (main/master)"
echo -e ""
echo -e "5. ${YELLOW}Configure the worker service${NC}"
echo -e "   - Name: ${GREEN}nesto-shap-worker${NC}"
echo -e "   - Environment: ${GREEN}Python${NC}"
echo -e "   - Region: Select the same region as your web service"
echo -e ""
echo -e "6. ${YELLOW}Set the build command:${NC}"
echo -e "${GREEN}echo \"Building optimized worker service\" && chmod +x ./render_pre_deploy.sh && ./render_pre_deploy.sh && chmod +x ./deploy_to_render.sh && export SKIP_MODEL_TRAINING=true && ./deploy_to_render.sh && pip install psutil python-dotenv rq redis${NC}"
echo -e ""
echo -e "7. ${YELLOW}Set the start command:${NC}"
echo -e "${GREEN}echo \"Starting memory-optimized SHAP worker\" && python3 -c \"import gc; gc.enable(); print('Garbage collection enabled')\" && chmod +x ./simple_worker.py && ./simple_worker.py${NC}"
echo -e ""
echo -e "8. ${YELLOW}Add the following environment variables:${NC}"
echo -e "   - ${GREEN}AGGRESSIVE_MEMORY_MANAGEMENT${NC} = false"
echo -e "   - ${GREEN}SHAP_BATCH_SIZE${NC} = 500"
echo -e "   - ${GREEN}SHAP_MAX_BATCH_SIZE${NC} = 500"
echo -e "   - ${GREEN}REDIS_URL${NC} = rediss://default:AVnAAAIjcDEzZjMwMjdiYWI5MjA0NjY3YTQ4ZjRjZjZjNWZhNTdmM3AxMA@ruling-stud-22976.upstash.io:6379"
echo -e "   - ${GREEN}REDIS_HEALTH_CHECK_INTERVAL${NC} = 30"
echo -e "   - ${GREEN}API_KEY${NC} = (same value as your web service)"
echo -e ""
echo -e "9. ${YELLOW}Select 'Create Worker'${NC}"
echo -e ""
echo -e "${BLUE}=================================================${NC}"
echo -e "${YELLOW}Monitoring the deployment:${NC}"
echo -e "${BLUE}=================================================${NC}"
echo -e ""
echo -e "1. After creating the worker, monitor the deployment logs"
echo -e "2. Verify the worker starts successfully without name collision errors"
echo -e "3. Check that jobs are being processed by submitting a test job"
echo -e ""
echo -e "${BLUE}=================================================${NC}"
echo -e "${YELLOW}Potential issues with render.yaml:${NC}"
echo -e "${BLUE}=================================================${NC}"
echo -e ""
echo -e "If Render is not creating the worker service from your render.yaml, potential issues may include:"
echo -e ""
echo -e "1. The YAML indentation might be incorrect (very sensitive in YAML files)"
echo -e "2. There might be hidden characters or formatting issues in the file"
echo -e "3. Render may require a specific configuration for worker services"
echo -e ""
echo -e "After manually creating the worker, you can compare the working configuration with your render.yaml file."
echo -e ""
echo -e "${GREEN}âœ… Good luck with the deployment!${NC}"
